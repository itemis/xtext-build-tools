pipeline {
  agent {
    kubernetes {
      label 'build-test-pod'
      defaultContainer 'xtext-buildenv'
      yaml '''
        apiVersion: v1
        kind: Pod
        spec:
          containers:
          - name: jnlp
            image: 'eclipsecbi/jenkins-jnlp-agent'
            args: ['\$(JENKINS_SECRET)', '\$(JENKINS_NAME)']
            volumeMounts:
            - mountPath: /home/jenkins/.ssh
              name: volume-known-hosts
          - name: xtext-buildenv
            image: docker.io/smoht/xtext-buildenv:latest
            tty: true
          volumes:
          - configMap:
              name: known-hosts
            name: volume-known-hosts
    '''
    }
  }
  
  parameters {
    string(name: 'SOURCE_BRANCH', defaultValue: 'master', description: 'Source Git Branch')
  }

  options {
    buildDiscarder(logRotator(numToKeepStr:'1'))
    disableConcurrentBuilds()
  }

  stages {
    stage('Check') {
      steps {
        script {
          def upToDate      = true
          def versions      = load 'build-tools/version_functions.groovy'
          def SOURCE_BRANCH = "${params.SOURCE_BRANCH}"
          
          def doCheck = {currentBuild, dependencyName, currentVersion, latestVersion ->
            if (currentVersion == latestVersion) {
              println ("[CHECK] ${dependencyName}: UP-TO-DATE (${latestVersion})")
            } else {
              println ("[CHECK] ${dependencyName}: UPDATE AVAILABLE ${currentVersion} -> ${latestVersion}")
              currentBuild.result = 'UNSTABLE'
            }
          }
          
          doCheck(currentBuild, 'Eclipse Tycho', versions.getXtextTychoVersion(SOURCE_BRANCH), versions.getLatestArtifactVersion('org.eclipse.tycho','tycho-maven-plugin'))
          doCheck(currentBuild, 'xtext-gradle-plugin', versions.getXtextGradlePluginVersion(SOURCE_BRANCH), versions.getLatestArtifactVersion('org.xtext','xtext-gradle-plugin'))
        }
      }
    }
  } // stages
}
